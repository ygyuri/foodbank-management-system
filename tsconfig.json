{
  "compilerOptions": {
    // Specify the target JavaScript version for compilation (ESNext supports the latest JS features)
    "target": "esnext",

    // Specify the module system (ESNext supports modern ES modules)
    "module": "esnext",

    // Enable all strict type-checking options (equivalent to enabling `noImplicitAny`, `noImplicitThis`, 
    // `alwaysStrict`, `strictNullChecks`, `strictFunctionTypes`, and `strictPropertyInitialization`)
    "strict": true,

    // Allow TypeScript to compile JavaScript and JSX files
    "allowJs": true,

    // Do not report errors in JavaScript files (useful when `allowJs` is enabled)
    "checkJs": false,

    // Preserve JSX syntax instead of transforming it (useful for React projects)
    "jsx": "preserve",

    // Generate `.d.ts` declaration files to describe TypeScript types for compiled modules
    "declaration": true,

    // Remove comments from the output JavaScript files
    "removeComments": true,

    // Disallow implicit `any` type for variables (must be explicitly typed)
    "noImplicitAny": true,

    // Disallow `this` to be implicitly typed as `any`
    "noImplicitThis": true,

    // Enable strict null checks (disallows assigning `null` or `undefined` to non-nullable types)
    "strictNullChecks": true,

    // Preserve constant enums in the compiled output to optimize performance
    "preserveConstEnums": true,

    // Specify the output directory for compiled JavaScript files
    "outDir": "./ts-out-dir",

    // Generate source maps to enable debugging of TypeScript files in browsers
    "sourceMap": true,

    // Do not report unused local variables (set to `true` to enforce cleaner code)
    "noUnusedLocals": false,

    // Allow importing JSON files as modules
    "resolveJsonModule": true,

    // Do not report unused function parameters (set to `true` to enforce cleaner code)
    "noUnusedParameters": false,

    // Specify the module resolution strategy (Node.js module resolution is used by default)
    "moduleResolution": "node",

    // Enable interoperability between ES modules and CommonJS modules (allows `import` and `require` to work together)
    "esModuleInterop": true,

    // Skip type checking for declaration files (*.d.ts)
    "skipLibCheck": true,

    // Set the base directory for resolving non-relative module imports
    "baseUrl": ".",

    // Define path aliases for module resolution
    "paths": {
      "@/*": ["resources/js/*"]
    },

    // Specify the default libraries to include (ES2018 features and DOM APIs)
    "lib": ["ES2018", "DOM"]
  },

  // Specify directories and files to be included in the TypeScript compilation
  "include": [
    "resources/js",
    "public/service-worker.js"
  ]
}
